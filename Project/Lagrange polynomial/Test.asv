clear all
close all
clc

data = readtable('test.csv');

% Defining the abscissa and ordinate
% X = data.SampleTimeFine;
% Y = data.dv_1_;

% Number of samples
% N = length(data.SampleTimeFine);
% Number of intermediate points between x0 and x1
% n = 10;
% x_l = linspace(931761852,931778519,10);

% % for iter = 1:length(x_l)
%     y_l = lagrange(X,Y,N,931761852)
%     hold on 
%     plot(x_l(iter),y_l,'o')
% % end
% 
% 
% 
% % Raw plot
% plot(X,Y,'o-')
% figure

% i = 2;
% % for i=1:10
%     xl_range = linspace(X(i,1),X(i+1,1),n);
%     yl_range = zeros();
%     for j=1:length(xl_range)
%         x_l = xl_range(j);
%         yl_range(j,1) = lagrange(X,Y,N,x_l);
%     end
% %   yl_range(i,1) = y_l;
% %     hold on
% %     plot(x(i,1),y(i,1))
%     hold on 
%     plot(xl_range(1,2:n-1),yl_range(2:n-1,1))
% end


        
        
%         
%         
% xp_range = linspace(x(2,1),x(3,1),20);
% % yp = 0;
% yp_range = zeros();
% 
% tic
% for m = 1:length(xp_range)
%     xp = xp_range(m);
%     yp = 0;
%     
%     yp_range(m,1) = yp;
% end
% toc
% 
% 
% 
% % Plotting update samples after finding intermediate values using largrange
% % interpolation
% plot(xp_range,yp_range)
% axis padded
% grid on 
% 

% IMPLEMENTING LAGRANGE SELF

num = ones();
den = ones();
x = [1;2.2;3.4;4.8;6;7];
y = [2;2.8;3;3.2;4;5];

for i = 1:length(x)
    for j = 
